#! /usr/bin/env ruby

require 'oauth'
require 'oauth/consumer'
require 'twitter'
require 'pp'
require 'json'

require 'thor'

CONSUMER_KEY = "TvEDulP9wjxcAkpPS2r1ux4Fr"
CONSUMER_SECRET = "t3AO41ngBpr4I30I0bkYNFXXlQtjCwahAgNXoiEtYHkaWxtIcu"

class Twit < Thor

  desc "tweet", "t: Tweet by a certain account"
  def tweet(tweet='', account='') 
    # fetch registered accounts
    accounts = Dir["/usr/bin/twit_setting_files/*"]
    accounts.each do |account|
      account.sub! '/usr/bin/twit_setting_files/setting_file_', ''
      account.sub! '.rb', ''
    end
    if accounts.index(account)
      require "/usr/bin/twit_setting_files/setting_file_#{account}"

      client = Twitter::REST::Client.new do |config|
        config.consumer_key = CONSUMER_KEY
        config.consumer_secret = CONSUMER_SECRET
        config.access_token = ACCESS_TOKEN
        config.access_token_secret = ACCESS_TOKEN_SECRET
      end

      # Tweet
      if tweet.split(//).size < 140
        if client.update(tweet)
          puts "\e[36m♪ Tweeted\e[0m"
        end
      else
        puts "Error: tweet under 140 characters"
      end

    elsif account==''
      # tweet by default account
      require "/usr/bin/twit_setting_files/setting_file_default"

      client = Twitter::REST::Client.new do |config|
        config.consumer_key = CONSUMER_KEY
        config.consumer_secret = CONSUMER_SECRET
        config.access_token = ACCESS_TOKEN
        config.access_token_secret = ACCESS_TOKEN_SECRET
      end

      # Tweet
      if tweet.split(//).size < 140
        if client.update(tweet)
          puts "\e[36m♪ Tweeted\e[0m"
        end
      else
        puts "Error: tweet under 140 characters"
      end

    else
      puts "Error: no such account"
    end
  end

  desc 'list', 'l: Show a list of accounts'
  def list
    # Fetch the name of default account 
    if s=File.read("twit_setting_files/setting_file_default.rb", :encoding => Encoding::UTF_8)
      s.gsub!(/^.*\n.*\nSCREEN_NAME = \"([^\\]*)\"\n/, '\1')
    end
    puts "\n---Accounts----" 
    accounts = Dir["/usr/bin/twit_setting_files/*"]
    accounts.each do |account|
      account.sub! '/usr/bin/twit_setting_files/setting_file_', ''
      account.sub! '.rb', ''
      if s==account
        puts account+" (Default)"
      elsif account=="default"
      else
        puts account
      end
    end
    puts "---------------" 
  end
  
  desc 'setup', 's: Setting an account'
  def setup
    @consumer=OAuth::Consumer.new( CONSUMER_KEY, CONSUMER_SECRET, {
        :site=>"https://api.twitter.com"
    })

    @request_token=@consumer.get_request_token
    @request_token.authorize_url

    url = @request_token.authorize_url
    
    # Open authorize page by default browser
    system "open #{url}"

    print "Please Enter Your PIN: "
    pin = $stdin.gets.to_i
    
    @access_token = @request_token.get_access_token(:oauth_verifier => pin)
    
    # GET user account information as json file
    endpoint = OAuth::AccessToken.new(@consumer, @access_token.token, @access_token.secret)
    response = endpoint.request(:get, 'https://api.twitter.com/1.1/account/settings.json')
    result = JSON.parse(response.body)
    screen_name = result["screen_name"]
    
    io = File.open("./twit_setting_files/setting_file_#{screen_name}.rb", "w")
    io.puts "ACCESS_TOKEN = \"#{@access_token.token}\""
    io.puts "ACCESS_TOKEN_SECRET = \"#{@access_token.secret}\""
    io.puts "SCREEN_NAME = \"#{screen_name}\""
    io.close
    
    puts "================="
    puts "Setting Completed"
    puts "================="
  end

  desc 'defaultset', 'd: Set Default Account'
  def defaultset
    @consumer=OAuth::Consumer.new( CONSUMER_KEY, CONSUMER_SECRET, {
        :site=>"https://api.twitter.com"
    })

    @request_token=@consumer.get_request_token
    @request_token.authorize_url

    url = @request_token.authorize_url
    
    # Open authorize page by default browser
    system "open #{url}"

    print "Please Enter Your PIN: "
    pin = $stdin.gets.to_i
    
    @access_token = @request_token.get_access_token(:oauth_verifier => pin)

    # GET user account information as json file
    endpoint = OAuth::AccessToken.new(@consumer, @access_token.token, @access_token.secret)
    response = endpoint.request(:get, 'https://api.twitter.com/1.1/account/settings.json')
    result = JSON.parse(response.body)
    screen_name = result["screen_name"]
    
    io = File.open("./twit_setting_files/setting_file_default.rb", "w")
    io.puts "ACCESS_TOKEN = \"#{@access_token.token}\""
    io.puts "ACCESS_TOKEN_SECRET = \"#{@access_token.secret}\""
    io.puts "SCREEN_NAME = \"#{screen_name}\""
    io.close
    
    puts "================="
    puts "Setting Completed"
    puts "================="
  end

end

Twit.start(ARGV)
